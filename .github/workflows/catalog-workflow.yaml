name: OnDemand-Deployment
on: [push, workflow_dispatch]

permissions:
      id-token: write
      contents: read
    
env:
  AZURE_RESOURCE_GROUP: ADE-DEC-2023
  AZURE_LOCATION: westeurope
  AZURE_ADE_CATALOG_NAME: ade-curated-templates
  AZURE_ADE_NAME: OrtimDeveloperCenter

jobs:
  Generate-ARM:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      bicepChanged: ${{ steps.filter.outputs.biceps }}      
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            biceps:
              - 'infrastructure-templates/**/*.bicep'
      - name: Compile Bicep files
        if: steps.filter.outputs.biceps == 'true'
        shell: python
        run: |
          import os
          import shutil
          import subprocess

          git = shutil.which('git')
          az = shutil.which('az')

          from pathlib import Path
          templates_path = Path.cwd() / 'infrastructure-templates'
          modules = []

          print('Compiling bicep files...')          
          for dirpath, dirnames, files in os.walk(templates_path):              
              if not templates_path.samefile(dirpath) and Path(dirpath).parent.samefile(templates_path):
                  modules.append(Path(dirpath))

          for moduleSpec in modules:
              print(f'Check if exists: {moduleSpec}/azuredeploy.json')
              if not (moduleSpec / 'azuredeploy.json').exists():                  
                  (moduleSpec / 'azuredeploy.json').touch()                  
                  subprocess.run([git, 'add', moduleSpec / 'azuredeploy.json'])

          for moduleSpec in modules:
              print(f'Compiling Bicep: {moduleSpec}')              
              subprocess.run([az, 'bicep', 'build', '--file', moduleSpec / 'main.bicep', '--outfile', moduleSpec / 'azuredeploy.json'])
          print('Generated ARM templates')
      - name: Commit changes
        if: steps.filter.outputs.biceps == 'true'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -am "Generated ARM templates"
          git push

  Sync-Catalog: 
    needs: Generate-ARM
    runs-on: ubuntu-latest
    if: needs.Generate-ARM.outputs.bicepChanged == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: OIDC Login to Azure 
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          enable-AzPSSession: false
      - name: Synchronize-Catalogs
        uses: azure/CLI@v1
        with:
          azcliversion: 2.51.0
          inlineScript: |
            az extension add --name devcenter
            az devcenter admin catalog sync \
                --name ${{ env.AZURE_ADE_CATALOG_NAME }} \
                --dev-center-name ${{ env.AZURE_ADE_NAME }} \
                --resource-group ${{ env.AZURE_RESOURCE_GROUP }} 
      - name: Azure logout
        run: az logout